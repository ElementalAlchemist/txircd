# txircd Configuration - Services

# This file has services configuration. Some things depend on others to work
# properly, so make sure to read everything carefully.

modules:

# Accounts: Provides the accounts infrastructure for server-to-server
# communication and for other account-related modules. This module MUST be
# loaded for any account-related functionality to function properly!
- Accounts

# AccountRegister: Allows users to register a new account using the REGISTER
# command.
- AccountRegister

# AccountIdentify: Allows users to identify to their account using the IDENTIFY
# or ID command.
- AccountIdentify

# AccountSASL: Allows clients to authenticate with accounts using SASL.
# Supports the PLAIN mechanism.
- AccountSASL

# AccountLogout: Allows logged-in users to log out of their accounts using the
# LOGOUT command. Without this, disconnecting or authenticating to a different
# account would be required to stop being logged into an account.
- AccountLogout

# AccountDrop: Allows users to delete their accounts using the ACCOUNTDROP
# command.
- AccountDrop

# AccountGhost: Allows users to disconnect other users signed into the same
# account. This is useful when the user's connection drops, but the old
# connection hasn't timed out yet, and the user reconnects with a new nickname
# while the old nickname is still claimed by the ghost connection.
- AccountGhost

# AccountGroup: Allows users to group and ungroup additional nicknames to their
# account.
- AccountGroup

# AccountEmail: Allows users to change the email address associated with their
# account.
- AccountEmail

# AccountName: Allows users to change their primary account name.
- AccountName

# AccountInfo: Allows users to query account information.
- AccountInfo

# AccountExtban: Allows using the R: matching extban to match account names.
- AccountExtban

# AccountNickProtect: Allows preventing users from using nicknames from an
# account into which they're not logged in.
- AccountNickProtect

# AccountAdminDrop: Allows admins with the account-drop permission to drop any
# account.
- AccountAdminDrop

# AccountAdminList: Allows admins with the info-accounts permission to view
# the names of all registered accounts.
- AccountAdminList

# ChannelRegister: Allows users to register channels by setting +r accountname.
- ChannelRegister

# Accounts configuration
# There are various options for accounts.

# account_password_hash
# This option specifies the default hash method for passwords. This must be
# specified and must be a string hash method loaded in the IRCd.
account_password_hash: pbkdf2

# account_password_minimum_length
# This option specifies the minimum length of a password in characters. The
# default value is 10.
#account_password_minimum_length: 10

# account_require_email
# This option is used to determine whether an email address is required for
# accounts. The default value is false.
#account_require_email: false

# account_max_nicks
# This option is used to limit the number of nicknames a single account can
# have associated with it. By default, there is no limit.
#account_max_nicks: 20

# account_nick_protect_seconds
# This option specifies the maximum number of seconds a user can use a nick
# before their nick is forcibly changed. The default value is 30.
#account_nick_protect_seconds: 30

# account_nick_recover_seconds
# This option specifies the number of seconds after a user's nick is forcibly
# changed by nick protection that a user must wait before they can change their
# nick. The default value is 10.
#account_nick_recover_seconds: 10

# account_nick_default_prefix
# This option specifies a prefix to be put in front of a nickname forcibly
# changed through AccountNickProtect. The default value is no prefix.
#account_nick_default_prefix: Guest

# account_nick_protect_restrict
# This option prevents a user from executing any commands except those needed
# to maintain their connection or identify while unidentified and using a
# protected nick. PING, PONG, IDENTIFY, ID, NICK, and QUIT will be allowed unless
# account_nick_protect_restricted_commands is set to different values. The default
# value is false.
#account_nick_protect_restrict: true

# account_nick_protect_restricted_commands
# This option allows whitelisted commands to be specified for
# account_nick_protect_restrict, mirroring the functionality of SHUN. We strongly
# recommend not removing PING, PONG, NICK, ID, or IDENTIFY from this list.
#account_nick_protect_restricted_commands:
#- PING
#- PONG
#- IDENTIFY
#- ID
#- NICK
#- QUIT

# Server bots
# If you loaded ServerBots, this configuration helps you to provide services
# bots with the normal commands. For more information, see the server_bots
# configuration block.
server_bots:
  NickServ:
    ident: NickServ
    host: services.example.com
    gecos: Nickname Services
    help_intro:
    - NickServ provides access to nickname and account services. Among other things, you are able to register, log into, and manage your account.
    - For more information on a specific command, use /msg NickServ help <command>.
    commands:
      HELP:
        help: Displays the help
        detailed_help:
        - Displays information about the functions NickServ provides.
        help_command: true
      REGISTER:
        help: Register a new account
        detailed_help:
        - This will register your current nickname as a new account. This gives you nickname protection and allows you to interact with services that require an account.
        - Syntax: REGISTER <password> [email-address]
        execute: REGISTER $1-
      IDENTIFY:
        help: Log into an account
        detailed_help:
        - Log into an account. This allows you to identify yourself with an existing account and ensure that you are able to interact with services or use your protected nicknames.
        - Syntax: IDENTIFY [account-name] <password>
        execute: IDENTIFY $1-
      ID:
        help: Log into an account
        detailed_help:
        - Log into an account. This allows you to identify yourself with an existing account and ensure that you are able to interact with services or use your protected nicknames.
        - Syntax: ID [account-name] <password>
        execute: IDENTIFY $1-
      LOGIN:
        help: Log into an account
        detailed_help:
        - Log into an account. This allows you to identify yourself with an existing account and ensure that you are able to interact with services or use your protected nicknames.
        - Syntax: LOGIN [account-name] <password>
        execute: IDENTIFY $1-
      LOGOUT:
        help: Logs out of an account
        detailed_help:
        - Logs out of an account.
        - Syntax: LOGOUT
        execute: LOGOUT
      DROP:
        help: Unregister an account
        detailed_help:
        - Unregisters the currently signed-in account. To prevent accidental drops, you must confirm this by entering your password.
        - Syntax: DROP <password>
        execute: ACCOUNTDROP $1
      INFO:
        help: Get information on an account
        detailed_help:
        - Get information on an account.
        - Syntax: INFO <account-name>
        execute: ACCOUNTINFO $1
      GHOST:
        help: Kill a ghost connection
        detailed_help:
        - Kills a ghost connection associated with your account. You must be logged into the same account as the user being killed to use this.
        - Syntax: GHOST <nick>
        execute: GHOST $1
      GROUP:
        help: Group your current nick to your account
        detailed_help:
        - Allows you to group your nick to your account. You can only group the nickname you are currently using, which must not be linked to any other accounts. The nickname will be added as an alternative nickname owned by your account.
        - Syntax: GROUP
        execute: ACCOUNTGROUP
      UNGROUP:
        help: Ungroup a nick from your account
        detailed_help:
        - Allows you to remove an alternative nickname from your account. The nickname will no longer be owned by your account.
        - Syntax: UNGROUP <nickname-to-remove>
        execute: ACCOUNTUNGROUP $1
      SETNAME:
        help: Change your account name
        detailed_help:
        - Changes your account name. You must change your acount name to another nickname on the account. This is considered the master nickname of your account and is used to display your account.
        - Syntax: SETNAME <new_nick>
        execute: ACCOUNTNAME $1
      SETEMAIL:
        help: Change your account email address
        detailed_help:
        - Allows you to change the email address associated with your account.
        - Syntax: SETEMAIL <email-address>
        execute: ACCOUNTEMAIL $1
  ChanServ:
    ident: ChanServ
    host: services.example.com
    gecos: Channel Services
    help_intro:
    - ChanServ allows you to manage channels owned by your account.
    - For more information on a specific command, use /msg ChanServ help <command>
    commands:
      REGISTER:
        help: Register a channel
        detailed_help:
        - Register a channel to the specified account. You must be a channel operator or otherwise able to register a channel to an account.
        - Syntax: REGISTER <channel> <account-name>
        execute: MODE $1 +r $2
      DROP:
        help: Unregister a channel
        detailed_help:
        - Unregister a channel you own.
        - Syntax: DROP <channel>
        execute: MODE $1 -r